[{"C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\player\\app-player-bar\\index.js":"1","C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\player\\lyric-bar\\index.js":"2","C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\player\\index.js":"3","C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\components\\play-aside\\index.js":"4","C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\player\\style.js":"5","C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\service\\module\\player.js":"6","C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\discover\\c-pages\\recommend\\components\\settle-singer\\style.js":"7","C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\discover\\c-pages\\toplist\\index.js":"8","C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\discover\\c-pages\\toplist\\style.js":"9","C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\service\\module\\rank.js":"10","C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\router\\index.js":"11","C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\discover\\c-pages\\toplist\\column.js":"12"},{"size":7314,"mtime":1608257730927,"results":"13","hashOfConfig":"14"},{"size":295,"mtime":1608172524455,"results":"15","hashOfConfig":"14"},{"size":8001,"mtime":1608276388938,"results":"16","hashOfConfig":"14"},{"size":5274,"mtime":1608254232053,"results":"17","hashOfConfig":"14"},{"size":4033,"mtime":1608277002135,"results":"18","hashOfConfig":"14"},{"size":697,"mtime":1608273493513,"results":"19","hashOfConfig":"14"},{"size":1818,"mtime":1608277874201,"results":"20","hashOfConfig":"14"},{"size":6348,"mtime":1608292270351,"results":"21","hashOfConfig":"14"},{"size":4674,"mtime":1608293217695,"results":"22","hashOfConfig":"14"},{"size":316,"mtime":1608280081824,"results":"23","hashOfConfig":"14"},{"size":2261,"mtime":1608279926193,"results":"24","hashOfConfig":"14"},{"size":1935,"mtime":1608292236314,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pk9qyf",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\player\\app-player-bar\\index.js",[],"C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\player\\lyric-bar\\index.js",[],"C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\player\\index.js",[],"C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\components\\play-aside\\index.js",[],"C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\player\\style.js",[],"C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\service\\module\\player.js",[],"C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\discover\\c-pages\\recommend\\components\\settle-singer\\style.js",[],"C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\discover\\c-pages\\toplist\\index.js",["51","52","53","54","55"],"import React, { memo, useEffect, useState } from 'react'\r\nimport {getAllTopList,getTopListDetail} from '@/service/module/rank'\r\nimport {getSizeImage} from '@/utils/format-utils'\r\nimport {RankWrapper,RankWrapLeft,RankWrapRight} from './style'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Table } from 'antd';\r\nimport { \r\n    ClockCircleOutlined,\r\n    PlayCircleOutlined,\r\n    ShareAltOutlined,\r\n    DownloadOutlined,\r\n    MessageOutlined,\r\n    FolderAddOutlined } from '@ant-design/icons';\r\nimport {columns} from './column'\r\nfunction Toplist(props) {\r\n\r\n    // 获取路由id\r\n    const rankListId = props.match.params.id || 19723756\r\n    console.log(props.match.params.id,rankListId);\r\n    //react hook\r\n    const [rankTitleList,setRankTitleList] = useState([])\r\n    const [rankDetailList,setRankDetailList] = useState({})\r\n    \r\n    // 请求数据\r\n    useEffect(() => {\r\n        getAllTopList().then(res => {\r\n            setRankTitleList(res.list)\r\n        })\r\n    },[])\r\n    // 根据id请求排行榜歌曲\r\n    useEffect(() => {\r\n        getTopListDetail(rankListId).then(res => {\r\n            setRankDetailList(res.playlist)\r\n        })\r\n    },[rankListId])\r\n    \r\n    return (\r\n        <RankWrapper className=\"wrap-v2\">\r\n            <RankWrapLeft>\r\n                <p className=\"rank-title\">云音乐特色榜</p>\r\n                {\r\n                    rankTitleList.map((item,index) => {\r\n                        if(index<4){\r\n                            return(\r\n                                <NavLink to={\"/discover/toplist/\"+item.id}>\r\n                                    <div className={item.id ===rankListId ? \"title-item active\" : \"title-item\"}>\r\n                                        <img src={getSizeImage(item.coverImgUrl,40)}></img>\r\n                                        <div className=\"info\">\r\n                                            <div className=\"title\">{item.name}</div>\r\n                                            <div className=\"desc\">{item.updateFrequency}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </NavLink>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n                <p className=\"rank-title\">全球媒体榜</p>\r\n                {\r\n                    rankTitleList.map((item,index) => {\r\n                        if(index>=4){\r\n                            return(\r\n                                <NavLink to={\"/discover/toplist/\"+item.id}>\r\n                                    <div className=\"title-item\">\r\n                                        <img src={getSizeImage(item.coverImgUrl,40)}></img>\r\n                                        <div className=\"info\">\r\n                                            <div className=\"title\">{item.name}</div>\r\n                                            <div className=\"desc\">{item.updateFrequency}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </NavLink>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n            </RankWrapLeft>\r\n\r\n            <RankWrapRight>\r\n                <div className=\"rank-info\">\r\n                    <div className=\"img-box\">\r\n                        <img src={getSizeImage(rankDetailList.coverImgUrl,150)}/>\r\n                        <span className=\"sprite_covor mask\"></span>\r\n                    </div>\r\n                    <div className=\"detail-info\">\r\n                        <div className=\"rank-name\">{rankDetailList.name}</div>\r\n                        <div className=\"update-info\">\r\n                            <ClockCircleOutlined />\r\n                            <span>最近更新：</span>\r\n                            <span>{new Date(rankDetailList.updateTime).toLocaleDateString()}</span>\r\n                        </div>\r\n                        <div className=\"song-btn-con\">\r\n                            <button className=\"play sprite_button\">\r\n                                <span>\r\n                                    <PlayCircleOutlined />\r\n                                </span>\r\n                                播放\r\n                            </button>\r\n                            <button>\r\n                                <span>\r\n                                    <FolderAddOutlined />\r\n                                </span>\r\n                                ({rankDetailList.subscribedCount})\r\n                            </button>\r\n                            <button>\r\n                                <span>\r\n                                    <ShareAltOutlined />\r\n                                </span>\r\n                                ({rankDetailList.shareCount})\r\n                            </button>\r\n                            <button>\r\n                                <span>\r\n                                    <DownloadOutlined />\r\n                                </span>\r\n                                下载\r\n                            </button>\r\n                            <button>\r\n                                <span>\r\n                                    <MessageOutlined />\r\n                                </span>\r\n                                （{rankDetailList.commentCount}）\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"rank-detail-contain\">\r\n                    <div className=\"rank-table-title\">\r\n                        <p className=\"count\">\r\n                            <span>歌曲列表</span>\r\n                            {rankDetailList.tracks&&rankDetailList.tracks.length}首歌\r\n                        </p>\r\n                        <p className=\"play-count\">\r\n                            播放：\r\n                            <span>\r\n                                {rankDetailList.playCount}\r\n                            </span>\r\n                            次\r\n                        </p>\r\n                    </div>\r\n                    <Table pagination={false} dataSource={rankDetailList.tracks} columns={columns} />\r\n                </div>\r\n            </RankWrapRight>\r\n        </RankWrapper>\r\n    )\r\n}\r\n\r\nexport default memo(Toplist)","C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\discover\\c-pages\\toplist\\style.js",[],"C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\service\\module\\rank.js",[],"C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\router\\index.js",[],"C:\\Users\\DHAdmin\\Desktop\\react\\react-163music\\src\\pages\\discover\\c-pages\\toplist\\column.js",["56"],{"ruleId":"57","severity":1,"message":"58","line":42,"column":52,"nodeType":"59","messageId":"60","endLine":42,"endColumn":54},{"ruleId":"61","severity":1,"message":"62","line":47,"column":41,"nodeType":"63","endLine":47,"endColumn":86},{"ruleId":"57","severity":1,"message":"58","line":60,"column":52,"nodeType":"59","messageId":"60","endLine":60,"endColumn":54},{"ruleId":"61","severity":1,"message":"62","line":65,"column":41,"nodeType":"63","endLine":65,"endColumn":86},{"ruleId":"61","severity":1,"message":"62","line":81,"column":25,"nodeType":"63","endLine":81,"endColumn":82},{"ruleId":"61","severity":1,"message":"62","line":23,"column":25,"nodeType":"63","endLine":23,"endColumn":70},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]